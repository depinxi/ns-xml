<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © 2011-2012 by Renaud Guillard (dev@nore.fr) -->
<!-- Distributed under the terms of the MIT License, see LICENSE -->
<prg:program xmlns:prg="http://xsd.nore.fr/program" xmlns:xi="http://www.w3.org/2001/XInclude" version="2.0">
	<prg:name>build-shellscript</prg:name>
	<prg:author>Renaud Guillard</prg:author>
	<prg:version>2.0</prg:version>
	<prg:copyright>Copyright © 2011-2012 by Renaud Guillard (dev@nore.fr)</prg:copyright>
	<prg:license>Distributed under the terms of the MIT License, see LICENSE</prg:license>
	<prg:documentation>
		<prg:abstract>Shell script builder which use program interface XML definition file to automatically generate command line processing and help messages</prg:abstract>
	</prg:documentation>
	<prg:ui>
		<prg:label>Shellscript builder</prg:label>
		<prg:window width="800" height="320" />
	</prg:ui>
	<prg:options>
		<!-- ns-xml path -->
		<xi:include href="options.xml" xpointer="xmlns(prg=http://xsd.nore.fr/program) xpointer(//prg:group[@id = 'nsxml.option.nsxmlPathGroup'])" />
		<!-- program interface XML definition file -->
		<xi:include href="options.xml" xpointer="xmlns(prg=http://xsd.nore.fr/program) xpointer(//prg:argument[@id = 'nsxml.option.xmlProgramDescriptionPath'])" />
		<prg:argument required="true" id="xmlShellFileDescriptionPath">
			<prg:databinding>
				<prg:variable>xmlShellFileDescriptionPath</prg:variable>
			</prg:databinding>
			<prg:documentation>
				<prg:abstract>XML shell file</prg:abstract>
				<prg:details>
					A XML file following the bash XML schema
					<prg:endl />
					The file may include a program interface XML definition
				</prg:details>
			</prg:documentation>
			<prg:type>
				<prg:path exist="true">
					<prg:kinds>
						<prg:file />
					</prg:kinds>
					<prg:patterns>
						<prg:pattern>
							<prg:name>XML shell file</prg:name>
							<prg:rules>
								<prg:rule>
									<prg:endWith>.xsh</prg:endWith>
								</prg:rule>
							</prg:rules>
						</prg:pattern>
					</prg:patterns>
				</prg:path>
			</prg:type>
			<prg:names>
				<prg:short>s</prg:short>
				<prg:long>shell</prg:long>
			</prg:names>
		</prg:argument>
		<!-- Skip validation -->
		<xi:include href="options.xml" xpointer="xmlns(prg=http://xsd.nore.fr/program) xpointer(//prg:switch[@id = 'nsxml.option.skipValidation'])" />
		<!-- Tweaks -->
		<prg:group id="defaultInterpreter" type="exclusive">
			<prg:databinding>
				<prg:variable>defaultInterpreter</prg:variable>
			</prg:databinding>
			<prg:documentation>
				<prg:abstract>Default interpreter</prg:abstract>
			</prg:documentation>
			<prg:options>
				<prg:argument id="defaultInterpreterType">
					<prg:databinding>
						<prg:variable>defaultInterpreterType</prg:variable>
					</prg:databinding>
					<prg:documentation>
						<prg:abstract>Default shell interpreter type</prg:abstract>
						<prg:details>
							The interpreter family to use if the XSH file does not define one.
							<prg:block>Attention: This parameter is only available for XSH file using the
								XSH XML schema (http://xsd.nore.fr/xsh). The old http://xsd.nore.fr/bash XSD schema is not
								supported.
							</prg:block>
						</prg:details>
					</prg:documentation>
					<prg:names>
						<prg:long>interpreter</prg:long>
						<prg:short>i</prg:short>
					</prg:names>
					<prg:select>
						<prg:option>bash</prg:option>
						<prg:option>zsh</prg:option>
						<prg:option>ksh</prg:option>
					</prg:select>
				</prg:argument>
				<prg:argument id="defaultInterpreterCommand">
					<prg:databinding>
						<prg:variable>defaultInterpreterCommand</prg:variable>
					</prg:databinding>
					<prg:documentation>
						<prg:abstract>Default shell interpreter invocation directive</prg:abstract>
						<prg:details>This value if used if the XSH file does not define one</prg:details>
					</prg:documentation>
					<prg:names>
						<prg:long>interpreter-cmd</prg:long>
						<prg:short>I</prg:short>
					</prg:names>
					<prg:select>
						<prg:option>/usr/bin/env bash</prg:option>
						<prg:option>/bin/bash</prg:option>
						<prg:option>/usr/bin/env zsh</prg:option>
						<prg:option>/bin/zsh</prg:option>
					</prg:select>
				</prg:argument>
			</prg:options>
		</prg:group>
		<prg:switch id="prefixSubcommandBoundVariableName">
			<prg:databinding>
				<prg:variable>prefixSubcommandBoundVariableName</prg:variable>
			</prg:databinding>
			<prg:documentation>
				<prg:abstract>Prefix subcommand options bound variable names</prg:abstract>
				<prg:details>This will prefix all subcommand options bound variable name by the subcommand name (sc_varianbleNmae).
					This avoid variable name aliasing.
				</prg:details>
			</prg:documentation>
			<prg:names>
				<prg:long>prefix-sc-variables</prg:long>
				<prg:short>p</prg:short>
			</prg:names>
		</prg:switch>
		<!-- debugMode -->
		<xi:include href="options.xml" xpointer="xmlns(prg=http://xsd.nore.fr/program) xpointer(//prg:switch[@id = 'nsxml.option.debugMode'])" />
		<!-- Help -->
		<xi:include href="../lib/options/options.xml" xpointer="xmlns(prg=http://xsd.nore.fr/program) xpointer(//prg:switch[@id = 'prg.option.displayHelp'])" />
		<prg:argument required="true">
			<prg:databinding>
				<prg:variable>outputScriptFilePath</prg:variable>
			</prg:databinding>
			<prg:documentation>
				<prg:abstract>Output file path</prg:abstract>
			</prg:documentation>
			<prg:names>
				<prg:short>o</prg:short>
				<prg:long>output</prg:long>
			</prg:names>
			<prg:type>
				<prg:path>
					<prg:kinds>
						<prg:file />
					</prg:kinds>
				</prg:path>
			</prg:type>
		</prg:argument>
	</prg:options>
</prg:program>
