<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright Â© 2011 - 2020 by Renaud Guillard (dev@nore.fr) -->
<!-- Distributed under the terms of the MIT License, see LICENSE -->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:prg="http://xsd.nore.fr/program" targetNamespace="http://xsd.nore.fr/program" elementFormDefault="qualified">
	<xsd:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="../../www.w3.org/XML/1998/namespace.xsd"/>

	<xsd:complexType name="emptyType"/>

	<xsd:simpleType name="nonEmptyString">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value=".+"/>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="literalTrueType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="true"/>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="literalFalseType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="false"/>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="literalBooleanType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="true"/>
			<xsd:enumeration value="false"/>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="simpleTextType">
		<xsd:restriction base="prg:nonEmptyString">
			<xsd:whiteSpace value="collapse"/>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="regularExpressionTypenameType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="POSIX"/>
			<xsd:enumeration value="PCRE"/>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:complexType name="richTextType" mixed="true">
		<xsd:group ref="prg:descriptionElementsGroup" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:complexType>

	<xsd:complexType name="documentationType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Documentation of an element</xsd:documentation>
		</xsd:annotation>
		<xsd:all minOccurs="1">
			<xsd:element name="abstract" type="prg:simpleTextType" minOccurs="0"/>
			<xsd:element name="details" type="prg:richTextType" minOccurs="0"/>
		</xsd:all>
		<xsd:attribute ref="xml:base"/>
	</xsd:complexType>

	<xsd:complexType name="pathRuleType">
		<xsd:simpleContent>
			<xsd:extension base="prg:nonEmptyString">
				<xsd:attribute name="casesensitive" type="prg:literalTrueType" use="optional"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:group name="pathPatternRuleGroup">
		<xsd:choice>
			<xsd:element name="startWith" type="prg:pathRuleType" maxOccurs="1"/>
			<xsd:element name="endWith" type="prg:pathRuleType" maxOccurs="1"/>
			<xsd:element name="contains" type="prg:pathRuleType" maxOccurs="1"/>
		</xsd:choice>
	</xsd:group>

	<xsd:complexType name="pathPatternRulesType">
		<xsd:sequence>
			<xsd:element name="rule" minOccurs="1" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence minOccurs="1" maxOccurs="unbounded">
						<xsd:group ref="prg:pathPatternRuleGroup"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="pathPatternType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A path pattern</xsd:documentation>
		</xsd:annotation>
		<xsd:all>
			<xsd:element name="name" type="prg:nonEmptyString" minOccurs="1"/>
			<xsd:element name="rules" type="prg:pathPatternRulesType" minOccurs="1"/>
		</xsd:all>
	</xsd:complexType>

	<xsd:complexType name="pathPatternsType">
		<xsd:sequence minOccurs="1">
			<xsd:element name="pattern" type="prg:pathPatternType"/>
		</xsd:sequence>
		<xsd:attribute name="restrict" type="prg:literalTrueType" use="optional">
			<xsd:annotation>
				<xsd:documentation xml:lang="en">File path must match at least one of the given patterns</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="pathTypeSelectionType">
		<xsd:sequence minOccurs="1">
			<xsd:choice minOccurs="0" maxOccurs="unbounded">
				<xsd:element name="file"/>
				<xsd:element name="folder"/>
				<xsd:element name="symlink"/>
				<xsd:element name="socket"/>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:simpleType name="pathAccessType">
		<xsd:restriction base="xsd:string">
			<xsd:minLength value="1"/>
			<xsd:maxLength value="3"/>
			<xsd:whiteSpace value="collapse"/>
			<!-- @todo a better regex ? -->
			<xsd:pattern value="(r|w|x|rw|rx|wr|wx|xr|xw|rwx|rxw|wrx|wxr|xrw|xwr)"/>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:complexType name="pathType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Represent a file system path (file, folder...)</xsd:documentation>
		</xsd:annotation>
		<xsd:all>
			<xsd:element name="kinds" type="prg:pathTypeSelectionType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">A list of valid item kinds. The argument value kind will have to be at least one of the following</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="patterns" type="prg:pathPatternsType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">A list of valid name patterns</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:all>
		<xsd:attribute name="access" type="prg:pathAccessType" use="optional">
			<xsd:annotation>
				<xsd:documentation xml:lang="en">Permissions</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="exist" type="prg:literalBooleanType" use="optional">
			<xsd:annotation>
				<xsd:documentation xml:lang="en">The item must exists</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:group name="itemTypeGroup">
		<xsd:choice>
			<xsd:element name="string"/>
			<xsd:element name="number">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Any kind of number</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:attribute name="min" type="xsd:float" use="optional"/>
					<xsd:attribute name="max" type="xsd:float" use="optional"/>
					<xsd:attribute name="decimal" type="xsd:positiveInteger" use="optional"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="path" type="prg:pathType">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Any kind of file system element</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="existingcommand" type="prg:emptyType">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">An existing program available in execution paths</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="hostname" type="prg:emptyType">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">A hostname</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="mixed" type="prg:emptyType">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">
						Any kind
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:choice>
	</xsd:group>

	<xsd:complexType name="itemType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Describes an argument option parameter or a value</xsd:documentation>
		</xsd:annotation>
		<xsd:group ref="prg:itemTypeGroup"/>
		<xsd:attribute ref="xml:base"/>
	</xsd:complexType>

	<xsd:complexType name="optionUISpecsType">
		<xsd:all>
			<xsd:element name="label" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Label displayed in user interface rather than abstract</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:all>
		<xsd:attribute name="mode" type="prg:optionUIModeEnum" use="optional"/>
	</xsd:complexType>

	<xsd:complexType name="argumentOptionUISpecsType">
		<xsd:all>
			<xsd:element name="label" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Label displayed in user interface rather than abstract</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="value" type="prg:nonEmptyString" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Option value</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:all>
		<xsd:attribute name="mode" type="prg:optionUIModeEnum" use="optional"/>
	</xsd:complexType>

	<xsd:complexType name="multiargumentOptionUISpecsType">
		<xsd:all>
			<xsd:element name="label" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Label displayed in user interface rather than abstract</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="values" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Option values</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="value" type="prg:nonEmptyString" minOccurs="1">
							<xsd:annotation>
								<xsd:documentation xml:lang="en">Option value</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:all>
		<xsd:attribute name="mode" type="prg:optionUIModeEnum" use="optional"/>
	</xsd:complexType>

	<xsd:simpleType name="switchOptionModeEnum">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="boolean"/>
			<xsd:enumeration value="integer"/>
		</xsd:restriction>
	</xsd:simpleType>

	<!-- Type of a switch option -->
	<xsd:complexType name="switchOptionType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">
				A switch is a parameter-less option
			</xsd:documentation>
		</xsd:annotation>
		<xsd:all>
			<xsd:element name="documentation" type="prg:documentationType" minOccurs="0" maxOccurs="1"/>
			<xsd:element name="databinding" type="prg:databindingType" minOccurs="0" maxOccurs="1"/>
			<xsd:element name="names" type="prg:optionNamesType" minOccurs="1"/>
			<xsd:element name="ui" type="prg:optionUISpecsType" minOccurs="0"/>
		</xsd:all>
		<xsd:attribute ref="xml:base"/>
		<xsd:attribute name="id" type="xsd:ID" use="optional"/>
		<xsd:attribute name="mode" type="prg:switchOptionModeEnum" use="optional" default="boolean"/>
	</xsd:complexType>

	<xsd:complexType name="argumentOptionValueType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">
				An element of a possible list of value for an argument option
			</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleContent>
			<xsd:extension base="prg:nonEmptyString">
				<!-- <attribute name="id" type="prg:itemIdType" /> -->
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>

	<xsd:complexType name="argumentProposedValueType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Proposed values</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="1" maxOccurs="unbounded">
			<xsd:element name="option" type="prg:argumentOptionValueType"/>
		</xsd:sequence>
		<xsd:attribute name="restrict" type="prg:literalTrueType" use="optional">
			<xsd:annotation>
				<xsd:documentation xml:lang="en">Restrict possible values to those described in
					the proposed value list
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="argumentOptionType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Argument with a single value</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="prg:emptyType">
				<xsd:all>
					<xsd:element name="documentation" type="prg:documentationType" minOccurs="0" maxOccurs="1"/>
					<xsd:element name="databinding" type="prg:databindingType" minOccurs="0" maxOccurs="1"/>
					<xsd:element name="names" type="prg:optionNamesType" minOccurs="1"/>
					<xsd:element name="select" type="prg:argumentProposedValueType" maxOccurs="1" minOccurs="0"/>
					<xsd:element name="type" type="prg:itemType" minOccurs="0" maxOccurs="1"/>
					<xsd:element name="default" type="prg:nonEmptyString" minOccurs="0" maxOccurs="1">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Default argument value</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ui" type="prg:argumentOptionUISpecsType" minOccurs="0"/>
				</xsd:all>
				<xsd:attribute ref="xml:base"/>
				<xsd:attribute name="id" type="xsd:ID" use="optional"/>
				<xsd:attribute name="required" type="prg:literalTrueType" use="optional"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!-- multiple arguement element type -->
	<xsd:complexType name="multipleArgumentOptionType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Argument with multiple values</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="prg:emptyType">
				<xsd:all>
					<xsd:element name="documentation" type="prg:documentationType" minOccurs="0" maxOccurs="1"/>
					<xsd:element name="databinding" type="prg:databindingType" minOccurs="0" maxOccurs="1"/>
					<xsd:element name="names" type="prg:optionNamesType" minOccurs="1"/>
					<xsd:element name="select" type="prg:argumentProposedValueType" maxOccurs="1" minOccurs="0"/>
					<xsd:element name="type" type="prg:itemType" minOccurs="0" maxOccurs="1"/>
					<xsd:element name="ui" type="prg:multiargumentOptionUISpecsType" minOccurs="0"/>
				</xsd:all>
				<xsd:attribute ref="xml:base"/>
				<xsd:attribute name="id" type="xsd:ID" use="optional"/>
				<xsd:attribute name="required" type="prg:literalTrueType" use="optional"/>
				<xsd:attribute name="min" use="optional" default="1">
					<xsd:annotation>
						<xsd:documentation xml:lang="en">Minimum number of values</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:positiveInteger">
							<xsd:minInclusive value="1"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:attribute>
				<xsd:attribute name="max" use="optional">
					<xsd:annotation>
						<xsd:documentation xml:lang="en">Maximum number of values</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:positiveInteger">
							<xsd:minInclusive value="1"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:simpleType name="actionGroupTypeEnum">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="exclusive">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Only one option of the group can be present
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="all">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">All options of the group have to be set
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>

	<!-- group element type -->
	<xsd:complexType name="groupOptionType">
		<xsd:complexContent>
			<xsd:extension base="prg:emptyType">
				<xsd:all>
					<xsd:element name="documentation" type="prg:documentationType" minOccurs="0" maxOccurs="1"/>
					<xsd:element name="databinding" type="prg:databindingType" minOccurs="0" maxOccurs="1"/>
					<xsd:element name="options" type="prg:optionsType" minOccurs="1">
						<xsd:unique name="subOptionsIdUniqueness">
							<xsd:selector xpath="./*"/>
							<xsd:field xpath="@id"/>
						</xsd:unique>
					</xsd:element>
					<xsd:element name="ui" type="prg:optionUISpecsType" minOccurs="0"/>
					<xsd:element name="default" minOccurs="0" maxOccurs="1">
						<xsd:annotation>
							<xsd:appinfo>The sub option to select if none was set</xsd:appinfo>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="id" type="xsd:IDREF"/>
						</xsd:complexType>
						<xsd:keyref name="groupDefaultOptionUniqueRef" refer="prg:subOptionsIdUniqueness">
							<xsd:selector xpath="prg:default"/>
							<xsd:field xpath="@id"/>
						</xsd:keyref>
					</xsd:element>
				</xsd:all>
				<xsd:attribute ref="xml:base"/>
				<xsd:attribute name="id" type="xsd:ID" use="optional"/>
				<xsd:attribute name="type" type="prg:actionGroupTypeEnum" use="optional"/>
				<xsd:attribute name="required" type="prg:literalTrueType" use="optional"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="otherValueNodeType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en"/>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="prg:emptyType">
				<xsd:all>
					<xsd:element name="documentation" type="prg:documentationType" minOccurs="0" maxOccurs="1"/>
					<xsd:element name="type" type="prg:itemType" minOccurs="0" maxOccurs="1"/>
					<xsd:element name="select" type="prg:argumentProposedValueType" maxOccurs="1" minOccurs="0"/>
				</xsd:all>
				<xsd:attribute name="id" type="xsd:ID" use="optional"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="valueNodeType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en"/>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="prg:otherValueNodeType">
				<xsd:attribute name="count" use="optional" default="1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="valuesNodeType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en"/>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="prg:valueNodeType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="other" type="prg:otherValueNodeType" minOccurs="0" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:simpleType name="subcommandNameType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">
				Name of a subcommand
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[a-z]([a-z0-9A-Z_-]*)"/>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:complexType name="subcommandNamesType">
		<xsd:sequence minOccurs="1" maxOccurs="unbounded">
			<xsd:element name="alias" type="prg:subcommandNameType"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="subcommandOptionType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">
				A special option represented by a word.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:all>
			<xsd:element name="name" type="prg:subcommandNameType" minOccurs="1"/>
			<xsd:element name="documentation" type="prg:documentationType" minOccurs="0"/>
			<xsd:element name="aliases" type="prg:subcommandNamesType" minOccurs="0"/>
			<xsd:element name="options" type="prg:optionsType" minOccurs="0" maxOccurs="1">
				<xsd:unique name="subcommandOptionShortNameUniqueness">
					<xsd:selector xpath=".//prg:names/prg:short"/>
					<xsd:field xpath="."/>
				</xsd:unique>
				<xsd:unique name="subcommandOptionLongNameUniqueness">
					<xsd:selector xpath=".//prg:names/prg:long"/>
					<xsd:field xpath="."/>
				</xsd:unique>
				<xsd:unique name="subcommandVariableNameUniqueness">
					<xsd:selector xpath=".//prg:databinding/prg:variable"/>
					<xsd:field xpath="."/>
				</xsd:unique>
			</xsd:element>
			<xsd:element name="values" type="prg:valuesNodeType" minOccurs="0" maxOccurs="1"/>
			<xsd:element name="ui" type="prg:subcommandUISpecsType" minOccurs="0" maxOccurs="1"/>
		</xsd:all>
		<xsd:attribute ref="xml:base"/>
	</xsd:complexType>

	<xsd:complexType name="databindingType">
		<xsd:all>
			<xsd:element name="variable" type="prg:variableNameType"/>
		</xsd:all>
		<xsd:attribute ref="xml:base"/>
	</xsd:complexType>

	<xsd:simpleType name="variableNameType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Programming language variable name</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:whiteSpace value="collapse"/>
			<xsd:pattern value="[a-zA-Z][\w_]*"/>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="shortOptionNameType">
		<xsd:restriction base="xsd:string">
			<xsd:length value="1"/>
			<xsd:whiteSpace value="collapse"/>
			<xsd:pattern value="[a-zA-Z0-9]"/>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="longOptionNameType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Long argument name</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:minLength value="2"/>
			<xsd:whiteSpace value="collapse"/>
			<xsd:pattern value="[a-zA-Z0-9][\w_-]*"/>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:group name="descriptionElementsGroup">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Set of elements accepted in description, liecense and details elements</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="endl" type="prg:emptyType" minOccurs="0" maxOccurs="1"/>
			<xsd:element name="br" type="prg:emptyType" minOccurs="0" maxOccurs="1"/>
			<xsd:element name="block" minOccurs="0" maxOccurs="1"/>
		</xsd:choice>
	</xsd:group>

	<xsd:complexType name="optionNamesType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">
				Definition of all option' names
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:choice minOccurs="1" maxOccurs="unbounded">
				<xsd:element name="short" type="prg:shortOptionNameType"/>
				<xsd:element name="long" type="prg:longOptionNameType"/>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>
	<!-- Set of elements which describe an option 'name' -->
	<xsd:group name="optionNameGroup">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">
				Definition of all option' names
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:choice minOccurs="1">
				<xsd:element name="short" type="prg:shortOptionNameType"/>
				<xsd:element name="long" type="prg:longOptionNameType"/>
			</xsd:choice>
		</xsd:sequence>
	</xsd:group>
	<xsd:group name="optionGroup">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">
				The available option types
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:choice>
				<xsd:element name="switch" type="prg:switchOptionType"/>
				<xsd:element name="argument" type="prg:argumentOptionType"/>
				<xsd:element name="multiargument" type="prg:multipleArgumentOptionType"/>
				<xsd:element name="group" type="prg:groupOptionType"/>
			</xsd:choice>
		</xsd:sequence>
	</xsd:group>

	<xsd:complexType name="optionsType">
		<xsd:sequence minOccurs="1" maxOccurs="unbounded">
			<xsd:group ref="prg:optionGroup" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute ref="xml:base">
			<xsd:annotation>
				<xsd:documentation>This attribute reference will allow the element to be included through XInclude.
					XInclude may add it while processing
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="id" type="xsd:ID" use="optional"/>
	</xsd:complexType>

	<xsd:complexType name="subcommandsType">
		<xsd:sequence minOccurs="1" maxOccurs="unbounded">
			<xsd:element name="subcommand" type="prg:subcommandOptionType"/>
		</xsd:sequence>
		<xsd:attribute ref="xml:base"/>
		<xsd:attribute name="id" type="xsd:ID" use="optional"/>
	</xsd:complexType>

	<xsd:complexType name="windowProgramUISpecsType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Application window preferences
				The value given by width and height attributes
				can be overriden by setting the prg.xul.windowWidth and
				prg.xul.windowHeight parameters of the XSLT stylesheet
			</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="width" type="xsd:positiveInteger" use="optional"/>
		<xsd:attribute name="height" type="xsd:positiveInteger" use="optional"/>
	</xsd:complexType>

	<xsd:complexType name="programUISpecsType">
		<xsd:all minOccurs="1">
			<xsd:element name="label" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Application name</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="window" type="prg:windowProgramUISpecsType" minOccurs="0"/>
		</xsd:all>
	</xsd:complexType>

	<xsd:simpleType name="subcommandUIModeEnum">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="disabled"/>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:complexType name="subcommandUISpecsType">
		<xsd:all>
			<xsd:element name="label" type="xsd:string" minOccurs="0" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Subcommand display name</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:all>
		<xsd:attribute name="mode" type="prg:subcommandUIModeEnum" use="optional"/>
	</xsd:complexType>

	<xsd:simpleType name="optionUIModeEnum">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="default">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Normal behavior</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="disabled">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Option is disabled in UI</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="hidden">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Do not show the control in UI but</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	
	<xsd:element name="options" type="prg:optionsType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">
			</xsd:documentation>
		</xsd:annotation>
		<xsd:unique name="optionShortNameUniqueness">
			<xsd:selector xpath=".//prg:names/prg:short"/>
			<xsd:field xpath="."/>
		</xsd:unique>
		<xsd:unique name="optionLongNameUniqueness">
			<xsd:selector xpath=".//prg:names/prg:long"/>
			<xsd:field xpath="."/>
		</xsd:unique>
		<xsd:unique name="optionVariableNameUniqueness">
			<xsd:selector xpath=".//prg:databinding/prg:variable"/>
			<xsd:field xpath="."/>
		</xsd:unique>
	</xsd:element>

	<xsd:element name="values" type="prg:valuesNodeType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">
			</xsd:documentation>
		</xsd:annotation>
	</xsd:element>

	<xsd:element name="program">
		<xsd:complexType>
			<xsd:all>
				<xsd:element name="name" type="prg:simpleTextType" minOccurs="1"/>
				<xsd:element name="author" type="prg:nonEmptyString" minOccurs="0"/>
				<xsd:element name="version" type="prg:nonEmptyString" minOccurs="0"/>
				<xsd:element name="license" type="prg:richTextType" minOccurs="0"/>
				<xsd:element name="copyright" type="prg:simpleTextType" minOccurs="0"/>
				<xsd:element name="documentation" type="prg:documentationType" minOccurs="0"/>
				<xsd:element name="subcommands" type="prg:subcommandsType" minOccurs="0"/>
				<xsd:element name="options" type="prg:optionsType" minOccurs="0">
					<xsd:unique name="optionsShortNameUniqueness">
						<xsd:selector xpath=".//prg:names/prg:short"/>
						<xsd:field xpath="."/>
					</xsd:unique>
					<xsd:unique name="optionsLongNameUniqueness">
						<xsd:selector xpath=".//prg:names/prg:long"/>
						<xsd:field xpath="."/>
					</xsd:unique>
					<xsd:unique name="variableNameUniqueness">
						<xsd:selector xpath=".//prg:databinding/prg:variable"/>
						<xsd:field xpath="."/>
					</xsd:unique>
				</xsd:element>
				<xsd:element name="values" type="prg:valuesNodeType" minOccurs="0"/>
				<xsd:element name="ui" type="prg:programUISpecsType" minOccurs="0"/>
			</xsd:all>
			<xsd:attribute ref="xml:base"/>
			<xsd:attribute name="version" use="required" fixed="2.0">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">
						Document schema version
					</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:decimal">
						<xsd:enumeration value="2.0"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
		<xsd:key name="subcommandNameKey">
			<xsd:selector xpath="./prg:subcommands/prg:subcommand/prg:name"/>
			<xsd:field xpath="."/>
		</xsd:key>
		<xsd:unique name="subcommandAliasUniqueness">
			<xsd:selector xpath="./prg:subcommands/prg:subcommand/prg:aliases/prg:alias"/>
			<xsd:field xpath="."/>
		</xsd:unique>
		<xsd:unique name="optionIdUniqueness">
			<xsd:selector xpath=".//prg:options/*"/>
			<xsd:field xpath="@id"/>
		</xsd:unique>
	</xsd:element>
</xsd:schema>
